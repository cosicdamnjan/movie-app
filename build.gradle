plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.22.1'
}

group = 'com.prodyna'
version = '0.1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.neo4j.driver:neo4j-java-driver'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.mockito:mockito-core:4.8.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	testImplementation 'org.testcontainers:neo4j:1.17.6'
	testImplementation 'org.testcontainers:testcontainers:1.17.6'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-inline:4.8.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

task copyJarToDockerDir(type: Copy) {
	from "$buildDir/libs"
	include "movie-app-0.1.0.jar"
	into "$buildDir/docker"
}

task buildDockerImage(type:Exec) {
	workingDir "$projectDir"
	commandLine "docker", "build", "-t", "cosicdamnjan/${project.name}:${project.version}", "-t", "cosicdamnjan/${project.name}:latest", "."
}

task pushDockerImage(type: Exec) {
	commandLine "docker", "push", "cosicdamnjan/${project.name}:${project.version}"
}

copyJarToDockerDir.dependsOn build
buildDockerImage.dependsOn copyJarToDockerDir
pushDockerImage.dependsOn buildDockerImage